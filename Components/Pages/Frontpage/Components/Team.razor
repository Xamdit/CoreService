@using Newtonsoft.Json
@using Service.Core.Constants
@using global::System.IO

<div class="py-10 py-lg-20">
  <div class="container">
    <div class="text-center mb-12">
      <h3 class="fs-2hx text-dark mb-5" id="team" data-kt-scroll-offset="{default: 100, lg: 150}">Our Great Team</h3>
      <div class="fs-5 text-muted fw-bold">
        Itâ€™s no doubt that when a development takes longer to complete, additional costs to
        <br/>integrate and test each extra feature creeps up and haunts most of us.
      </div>
    </div>
    <div class="tns tns-default" style="direction: ltr">
      <div data-tns="true" data-tns-loop="true" data-tns-swipe-angle="false" data-tns-speed="2000"
           data-tns-autoplay="true" data-tns-autoplay-timeout="18000" data-tns-controls="true" data-tns-nav="false"
           data-tns-items="1" data-tns-center="false" data-tns-dots="false" data-tns-prev-button="#kt_team_slider_prev"
           data-tns-next-button="#kt_team_slider_next" data-tns-responsive="{1200: {items: 3}, 992: {items: 2}}">
        @foreach (var TeamMember in TeamMembers)
        {
          <div class="text-center">
            <div class="octagon mx-auto mb-5 d-flex w-200px h-200px bgi-no-repeat bgi-size-contain bgi-position-center"
                 style="background-image:url('@TeamMember.ImageUrl')">
            </div>
            <div class="mb-0">
              <a href="#" class="text-dark fw-bold text-hover-primary fs-3">@TeamMember.Name</a>
              <div class="text-muted fs-6 fw-semibold mt-1">@TeamMember.Role</div>
            </div>
          </div>
        }
      </div>
      <button class="btn btn-icon btn-active-color-primary" id="kt_team_slider_prev">
        <i class="ki-duotone ki-left fs-2x"></i>
      </button>
      <button class="btn btn-icon btn-active-color-primary" id="kt_team_slider_next">
        <i class="ki-duotone ki-right fs-2x"></i>
      </button>
    </div>
  </div>
</div>

@code {

  // private List<TeamMember> TeamMembers = JsonConvert.DeserializeObject<List<TeamMember>>(File.ReadAllText(Path.Combine(Directory.GetCurrentDirectory(), "config", "frontend", "member.json")));
  private List<TeamMember> TeamMembers
  {
    get
    {
      var jsonString = File.ReadAllText(Path.Combine(Directory.GetCurrentDirectory(), "configs", "frontend", "member.json"));
      var output = JsonConvert.DeserializeObject<List<TeamMember>>(jsonString);
      return output;
    }
  }

  // private async Task<List<TeamMember>?> GetTeamMembers()
  // {
  //   // return await new FlurlClient(NavigationManager.BaseUri)
  //   //   .Request("json/en/member.json")
  //   //   .GetJsonAsync<List<TeamMember>>();
  // }

  protected override async Task OnInitializedAsync()
  {
  // var temp = await GetTeamMembers();
  // if (temp!=null)
  // {
  // TeamMembers = temp;
  // }
  // else
  // {
  // Console.WriteLine("Error");
  // }
  }

  protected override async Task OnAfterRenderAsync(bool firstRender)
  {
    if (!firstRender) return;
    StateHasChanged();
  }

}

@using Newtonsoft.Json

@inject IHttpClientFactory HttpClientFactory

<div class="app-sidebar-menu overflow-hidden flex-column-fluid">
  <div id="kt_app_sidebar_menu_wrapper" class="app-sidebar-wrapper">
    <div id="kt_app_sidebar_menu_scroll" class="scroll-y my-5 mx-3" data-kt-scroll="true" data-kt-scroll-activate="true"
         data-kt-scroll-height="auto" data-kt-scroll-dependencies="#kt_app_sidebar_logo, #kt_app_sidebar_footer"
         data-kt-scroll-wrappers="#kt_app_sidebar_menu" data-kt-scroll-offset="5px" data-kt-scroll-save-state="true">
      <div class="menu menu-column menu-rounded menu-sub-indention fw-semibold fs-6" id="#kt_app_sidebar_menu"
           data-kt-menu="true" data-kt-menu-expand="false">
        @foreach (var item in menuItems)
        {
          if (item.Submenu == null)
          {
            <MenuItem Href="@item.Url" Icon="@item.Icon" Title="@item.Title"/>
          }
          else
          {
            <AccordionMenu Icon="@item.Icon" Title="@item.Title" SubMenuItems="@item.Submenu"/>
          }
        }
      </div>
    </div>
  </div>
</div>


@code {
  private List<SidebarMenuItem>? menuItems = new();

  protected override async Task OnInitializedAsync()
  {
    menuItems = await LoadMenuItemsAsync();
  }

  private async Task<List<SidebarMenuItem>?> LoadMenuItemsAsync()
  {
    var path = Path.Combine(Directory.GetCurrentDirectory(), "configs/menu_admin.json");
    var response = await File.ReadAllTextAsync(path);
    var output = JsonConvert.DeserializeObject<List<SidebarMenuItem>>(response);
    return output;
  }

}
